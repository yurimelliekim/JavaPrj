package ex7.function;

public class Program1 {

	public static void 메뉴입력(){
		//함수를 구현하는 몸통
		System.out.println("┌────────────────────────────────────────────┐");
		System.out.println("│                  메인 메뉴                                             │");
		System.out.println("└────────────────────────────────────────────┘");
		System.out.println("\t1.성적 입력");
		System.out.println("\t2.성적 출력");
		System.out.println("\t3.종료");
		System.out.print("\t선택 >");
		
	}
	
	public static void main(String[] args) { //void:반환값, ():입력 값
		
		//이전에 만들었던 성적관리 프로그램의 흐름을 자연어로 나열해 보시오.
		//-----------------
		//반복 시작부분
		
		//1.메뉴입력-> 메뉴입력(); : 이 코드는 "메뉴입력()"이라는 함수가 있다고 가정하고 함수를 호출할 수 있다. 
		//						하지만, 우리는 이 함수가 없음을 안다. 우리가 이제 알아야 할 것은 업무단위를 함수로 정의하는 방법을 학습하는 것이다.
		//						함수의 의미는 수학에서와 같다. 다만 수학에서 정의 하는 방법과 자바에서 정의하는 표현식은 다를 수 있다.
		//						수학에서는 다음처럼 함수를 정의한다.
		//						메뉴입력="함수구현";
		//2.메뉴가 1일 경우: 성적입력
		//3.메뉴가 2일 경우: 성적 출력
		//4.메뉴가 3일 경우: 종료
		
		//반복 끝부분
		//------------------
		//프로그램을 만들어본적이 있는 사람은 위와 같은 흐름을 자연어로 만들 수 있다.
		//위와 같은 거시적인 단위의 흐름을 만들게 되면 그 단위가 업무단위가 된다.
		//그 단위는 각 단위별로 나누어서 만들어 지거나 다음에도 다시 사용할 수 있는 단위가 되어야 할것이다.
		//그런것들을 가능하게 하기 위해서 여기서도 함수가 업무단위를 나누는 도구로 사용된다.
		
		
		메뉴입력();
		
	}

}
